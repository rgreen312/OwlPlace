FROM golang:1.13.1-alpine3.10 AS builder

RUN echo "@testing http://nl.alpinelinux.org/alpine/edge/testing" >>/etc/apk/repositories
RUN apk add --update --no-cache build-base linux-headers git cmake bash #wget mercurial g++ autoconf libgflags-dev cmake  bash jemalloc
RUN apk add --update --no-cache \
    zlib \
    zlib-dev \
    bzip2 \
    bzip2-dev \
    snappy \
    snappy-dev \
    lz4 \
    lz4-dev \
    zstd@testing \
    zstd-dev@testing \
    libtbb-dev@testing \
    libtbb@testing

# gflags from source
ENV GFLAGS_VERSION 2.0
RUN cd /tmp &&\
    git clone -b v${GFLAGS_VERSION} --single-branch https://github.com/gflags/gflags.git &&\
    cd gflags &&\
    ./configure --prefix=/usr && make && make install &&\
    rm -rf /tmp/*

# Install Rocksdb
RUN cd /tmp && \
    git clone -b v6.3.6 --single-branch https://github.com/facebook/rocksdb.git && \
    cd rocksdb && \
    make shared_lib && \
    mkdir -p /usr/local/rocksdb/lib && \
    mkdir /usr/local/rocksdb/include && \
    cp librocksdb.so* /usr/local/rocksdb/lib && \
    cp /usr/local/rocksdb/lib/librocksdb.so* /usr/lib/ && \
    cp -r include /usr/local/rocksdb/ && \
    cp -r include/* /usr/include/ && \
    rm -R /tmp/rocksdb/

FROM builder AS compile-image

COPY server/go.mod /app/go.mod
COPY server/go.sum /app/go.sum

RUN cd /app && go mod download

COPY server /app

RUN cd /app && go build

FROM alpine:3.10 AS runtime-image

RUN echo "@testing http://nl.alpinelinux.org/alpine/edge/testing" >>/etc/apk/repositories
RUN apk add --update --no-cache \
        ca-certificates
RUN apk add --update --no-cache \
        zlib \
        zlib-dev \
        bzip2 \
        bzip2-dev \
        snappy \
        snappy-dev \
        lz4 \
        lz4-dev \
        zstd@testing \
        zstd-dev@testing \
        libtbb-dev@testing \
        libtbb@testing

COPY --from=builder /usr/lib/libgflags* /usr/lib/
COPY --from=builder /usr/include/gflags /usr/include/gflags
COPY --from=builder /usr/include/google /usr/include/google
COPY --from=builder /usr/local/rocksdb /usr/local/rocksdb
COPY --from=builder /usr/lib/librocksdb.so* /usr/lib/
COPY --from=builder /usr/local/rocksdb/include/rocksdb /usr/include/rocksdb
COPY --from=compile-image /app/server /bin/server

ENV NODEID 0
CMD "/bin/server"
