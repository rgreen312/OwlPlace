{"version":3,"sources":["components/ScrollToTop.tsx","colorPicker/components/colorPicker.tsx","canvas/components/Canvas.tsx","canvas/constants.ts","websocket/selectors.ts","canvas/selectors.ts","canvas/containers/CanvasContainer.tsx","canvas/actions.ts","canvas/actionTypes.ts","canvas/containers/CanvasPageContainer.tsx","websocket/actionTypes.ts","websocket/actions.ts","about/components/About.tsx","about/containers/AboutContainer.tsx","header/components/Header.tsx","login/actionTypes.ts","login/actions.ts","login/selectors.ts","header/containers/HeaderContainer.tsx","footer/components/Footer.tsx","error/components/Error.tsx","RoutingContainer.tsx","App.tsx","constants.ts","createReducer.ts","canvas/reducers.ts","login/reducers.ts","websocket/reducers.ts","index.tsx"],"names":["withRouter","children","pathname","location","useEffect","window","scrollTo","ColorPicker","onComplete","onCancel","className","style","useState","r","g","b","color","setColor","onChange","c","rgb","onClick","Canvas","props","canvasRef","createRef","state","showColorPicker","isDrag","translateX","translateY","dragStartX","dragStartY","colorPickerX","colorPickerY","bind","updateTranslate","this","current","width","height","context","getContext","registerContext","imageSmoothingEnabled","fillStyle","fillRect","addEventListener","ev","getMousePos","x","y","updatePosition","onMouseOut","e","zoomFactor","startPositionX","clientX","startPositionY","clientY","pickerX","pickerY","innerWidth","innerHeight","setState","removeEventListener","canvas","evt","rect","getBoundingClientRect","left","top","hideColorPicker","position","onUpdatePixel","receivedError","setZoomFactor","classNames","transform","ref","type","Component","getWebSocket","websocket","socket","undefined","getCurrentPosition","curPosition","getZoomFactor","mapDispatchToProps","ctx","dispatch","payload","getState","zoom","Math","ceil","newFactor","canvasContext","getCanvasContext","scale","newColor","connect","CanvasPageContainer","CanvasContainer","StartConnect","ConnectSuccess","ConnectError","CloseConnection","closeConnection","ActionTypes","About","sendUpdateMessage","href","id","send","JSON","stringify","userId","makeUpdateMessage","Header","onLogin","isLoggedIn","name","onLogout","onGoogleScriptLoad","console","log","loginButton","useLocation","menu","Item","substring","length","to","dropdownMenu","key","overlay","border","padding","fontSize","verticalAlign","title","subTitle","extra","LoginStart","LoginSuccess","LoginError","SignOut","loginStart","loginSuccess","email","getIsLoggedIn","login","getUserName","a","googleAPILoaded","Promise","resolve","gapi","load","auth2","init","client_id","getAuthInstance","signIn","googleUser","currentUser","get","profile","getBasicProfile","getName","getId","getEmail","signOut","Footer","Error","RoutingContainer","basename","exact","path","component","AboutPage","ErrorPage","App","checkLogin","openConnection","React","timeout","setTimeout","race","then","isSignedIn","WebSocket","onopen","message","connectSuccess","onclose","event","onerror","error","connectError","onmessage","data","createReducer","initialState","handlers","action","handler","WebSocketActionTypes","combineReducers","isConnected","rootReducer","canvasReducers","loginReducers","webSocketReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","render","document","getElementById"],"mappings":"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","file":"static/js/main.9575f487.chunk.js","sourcesContent":["import { FC, useEffect } from 'react';\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\n\n// @ts-ignore - TODO: figure out why typescript doesn't like this\nconst ScrollToTop: FC<RouteComponentProps> = ({\n  children,\n  location: { pathname }\n}) => {\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return children || null;\n};\n\nexport default withRouter(ScrollToTop);\n","import React, { FC, useState, CSSProperties } from \"react\";\r\nimport { SketchPicker } from \"react-color\";\r\nimport { Button } from \"antd\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport './colorPicker.scss';\r\n\r\ninterface RGBColor {\r\n  r: number;\r\n  g: number;\r\n  b: number;\r\n}\r\n\r\ninterface Props {\r\n  onComplete: (color: RGBColor) => void;\r\n  onCancel: () => void;\r\n  className?: string;\r\n  style?: CSSProperties;\r\n}\r\n// http://casesandberg.github.io/react-color/\r\n\r\nconst ColorPicker: FC<Props> = ({ onComplete, onCancel, className, style }) => {\r\n  const [color, setColor] = useState({ r: 0, g: 0, b: 0 })\r\n  const complete = () => onComplete(color);\r\n\r\n  return ( \r\n    <div className={className} style={style}>\r\n      <SketchPicker \r\n        color={color}\r\n        onChange={(c) => setColor({ r: c.rgb.r, b: c.rgb.b, g: c.rgb.g })}\r\n      />\r\n      <div className='button-bar'>\r\n        <Button onClick={complete} className='okay-button'>\r\n          Okay\r\n        </Button>\r\n        <Button onClick={onCancel} className='cancel-button'>\r\n          Cancel\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default ColorPicker;\r\n","import React, { Component, createRef, RefObject, useState } from 'react';\nimport ColorPicker from '../../colorPicker/components/colorPicker';\nimport { Redirect } from 'react-router-dom';\nimport './Canvas.scss';\nimport { Icon } from 'antd';\nimport { ZOOM_CHANGE_FACTOR } from '../constants';\nimport { Color, RGBColor } from 'react-color';\nimport classNames from 'classnames';\n\ninterface Props {\n  receivedError: boolean;\n  registerContext: (context: CanvasRenderingContext2D) => void;\n  updatePosition: (x: number, y: number) => void;\n  position: { x: number; y: number };\n  onMouseOut: () => void;\n  onUpdatePixel: (newColor: Color, x: number, y: number) => void;\n  zoomFactor: number;\n  setZoomFactor: (newZoom: number) => void;\n}\n\ninterface State {\n  showColorPicker: boolean;\n  isDrag: boolean;\n  translateX: number;\n  translateY: number;\n  dragStartX: number;\n  dragStartY: number;\n  colorPickerX: number;\n  colorPickerY: number;\n}\n\nclass Canvas extends Component<Props, State> {\n  canvasRef: RefObject<HTMLCanvasElement>;\n\n  constructor(props) {\n    super(props);\n    this.canvasRef = createRef();\n    this.state = {\n      showColorPicker: false,\n      isDrag: false,\n      translateX: 0,\n      translateY: 0,\n      dragStartX: 0,\n      dragStartY: 0,\n      colorPickerX: 0,\n      colorPickerY: 0,\n    };\n    this.onCancel = this.onCancel.bind(this);\n    this.onComplete = this.onComplete.bind(this);\n    this.updateTranslate = this.updateTranslate.bind(this);\n  }\n\n  componentDidMount() {\n    this.canvasRef.current!.width = 1000;\n    this.canvasRef.current!.height = 1000;\n\n    const context = this.canvasRef.current!.getContext('2d');\n\n    // const image = new Image();\n\n    // image.onload = function() {\n    //   if (context) {\n    //     context.drawImage(image, 0, 0);\n    //   }\n    // };\n    // image.src = this.props.initialImage;\n\n    if (context) {\n      this.props.registerContext(context);\n    }\n\n    context!.imageSmoothingEnabled = false;\n\n    // TODO: remove this code\n    context!.fillStyle = '#000000';\n    context!.fillRect(0, 0, 1000, 500);\n    context!.fillStyle = '#ff0000';\n    context!.fillRect(0, 500, 1000, 500);\n\n    this.canvasRef.current!.addEventListener('mousemove', ev => {\n      if (this.state.showColorPicker) return;\n      const { x, y } = this.getMousePos(this.canvasRef.current, ev);\n      this.props.updatePosition(x, y);\n    });\n\n    this.canvasRef.current!.addEventListener('mouseout', () => {\n      if (this.state.showColorPicker) return;\n      this.props.onMouseOut();\n    });\n\n    // On mousedown, get the current location to be used for dragging\n    this.canvasRef.current!.addEventListener('mousedown', e => {\n      const { zoomFactor } = this.props;\n      const { translateX, translateY } = this.state;\n      const startPositionX = e.clientX - translateX;\n      const startPositionY = e.clientY - translateY;\n\n      let pickerX = e.clientX + zoomFactor;\n      let pickerY = e.clientY;\n\n      // The color picker is 220 x 337 pixels \n      if (pickerX + 220 > window.innerWidth) {\n        pickerX -= 220;\n      }\n      if (pickerY + 337 > window.innerHeight - 70) {\n        pickerY -= 337;\n      }\n\n      this.setState({\n        dragStartX: startPositionX,\n        dragStartY: startPositionY,\n        colorPickerX: pickerX,\n        colorPickerY: pickerY\n      });\n\n      // If the user moves after clicking, then they are dragging so we add listener\n      this.canvasRef.current!.addEventListener(\n        'mousemove',\n        this.updateTranslate\n      );\n    });\n\n    /**\n     * On mouse up, we check if the user was dragging. If they were, we set isDrag to false and\n     * remove the event listener for dragging.\n     * \n     * If they were not dragging, then we display the color picker so we can update the color of\n     * the pixel.\n     */\n    this.canvasRef.current!.addEventListener('mouseup', ev => {\n      this.canvasRef.current!.removeEventListener(\n        'mousemove',\n        this.updateTranslate\n      );\n\n      if (!this.state.isDrag) {\n        const { x, y } = this.getMousePos(this.canvasRef.current, ev);\n        this.props.updatePosition(x, y);\n        this.showColorPicker();\n      }\n\n      this.setState({\n        isDrag: false\n      })\n    });\n  }\n\n  updateTranslate(ev: MouseEvent) {\n    const { dragStartX, dragStartY } = this.state;\n    const x = ev.clientX - dragStartX;\n    const y = ev.clientY - dragStartY;\n    this.setState({\n      isDrag: true,\n      translateX: x,\n      translateY: y,\n      showColorPicker: false,\n    });\n  }\n\n  getMousePos(canvas, evt) {\n    var rect = canvas.getBoundingClientRect();\n    return {\n      x: evt.clientX - rect.left,\n      y: evt.clientY - rect.top\n    };\n  }\n\n  onCancel() {\n    this.hideColorPicker();\n  }\n\n  onComplete(c: RGBColor) {\n    this.hideColorPicker();\n\n    const context = this.canvasRef.current!.getContext('2d');\n\n    const x = this.props.position.x - 1;\n    const y = this.props.position.y - 1;\n\n    context!.fillStyle = `rgb(${c.r}, ${c.g}, ${c.b})`\n    context!.fillRect(x, y, 1, 1);\n\n    this.props.onUpdatePixel({ r: c.r, g: c.g, b: c.b }, x, y);\n  }\n\n  showColorPicker() {\n    this.setState({\n      showColorPicker: true\n    });\n  }\n\n  hideColorPicker() {\n    this.setState({\n      showColorPicker: false\n    });\n  }\n\n  render() {\n    const { receivedError, zoomFactor, setZoomFactor } = this.props;\n    const { translateX, translateY, isDrag, colorPickerX, colorPickerY } = this.state;\n    return (\n      // receivedError ? <Redirect to='/error'/> :\n      <div className='canvas-container'>\n        {this.state.showColorPicker && (\n            <ColorPicker\n              onCancel={this.onCancel}\n              onComplete={c => this.onComplete(c)}\n              className='color-picker' \n              style={{ top: `${colorPickerY}px`, left: `${colorPickerX}px`}}\n            />\n        )}\n        <div\n          className={classNames({ 'pan-canvas': true, 'drag-canvas': isDrag })}\n          style={{ transform: `translate(${translateX}px, ${translateY}px)` }}\n        >\n          <div\n            className='zoom-canvas'\n            style={{ transform: `scale(${zoomFactor}, ${zoomFactor})` }}\n          >\n            <canvas ref={this.canvasRef} />\n          </div>\n        </div>\n        <div className='zoom-controls'>\n          <Icon\n            type='plus-circle'\n            onClick={() => setZoomFactor(zoomFactor + ZOOM_CHANGE_FACTOR)}\n            className='zoom-icon'\n          />\n          <Icon\n            type='minus-circle'\n            onClick={() => setZoomFactor(zoomFactor - ZOOM_CHANGE_FACTOR)}\n            className='zoom-icon'\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Canvas;\n","export const FETCH_IMAGE_ENDPOINT = '';\nexport const CANVAS_WIDTH = 1000;\nexport const CANVAS_HEIGHT = 1000;\nexport const DEFAULT_ZOOM = 41.0;\nexport const ZOOM_CHANGE_FACTOR = 10;\n","import { State } from '../types';\n\nexport const getWebSocket = (state: State): WebSocket | undefined => state.websocket.socket || undefined;\nexport const getIsConnected = (state: State): boolean => state.websocket.isConnected;\nexport const receivedError = (state: State): boolean => state.websocket.receivedError;\n","import { State } from '../types';\n\nexport const getCanvasContext = (state: State): CanvasRenderingContext2D | undefined => \n  state.canvas.canvasContext || undefined;\n\nexport const getCurrentPosition = (state: State): {x: number, y: number} | undefined => \n  state.canvas.curPosition || undefined;\n\nexport const getZoomFactor = (state: State): number => \n  state.canvas.zoomFactor;\n","import { connect } from 'react-redux';\nimport Canvas from '../components/Canvas';\nimport { receivedError } from '../../websocket/selectors';\nimport { registerCanvasContext, updateCursorPosition, clearCursorPosition, setZoomFactor, updatePixel } from '../actions';\nimport { getZoomFactor, getCurrentPosition } from '../selectors';\nimport { Color } from '../types';\n\ninterface DispatchProps {\n  registerContext: (context: CanvasRenderingContext2D) => void;\n  updatePosition: (x: number, y: number) => void;\n  onMouseOut: () => void;\n  setZoomFactor: (newZoom: number) => void;\n  onUpdatePixel: (newColor: Color, x: number, y: number) => void;\n}\n\ninterface StateProps {\n  receivedError: boolean;\n  zoomFactor: number;\n  position: {x: number, y: number} | undefined; \n}\n\nconst mapDispatchToProps: DispatchProps = {\n  registerContext: registerCanvasContext,\n  updatePosition: updateCursorPosition,\n  onMouseOut: clearCursorPosition,\n  setZoomFactor: setZoomFactor,\n  onUpdatePixel: updatePixel,\n};\n\nconst mapStateToProps  = (state): StateProps => ({\n  receivedError: receivedError(state),\n  zoomFactor: getZoomFactor(state),\n  position: getCurrentPosition(state), \n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Canvas);\n","// import { FETCH_IMAGE_ENDPOINT } from './constants';\n// import { HOSTNAME } from '../constants';\nimport { Color } from './types';\nimport * as ActionTypes from './actionTypes';\nimport { getZoomFactor, getCanvasContext } from './selectors'; \n\nconst fetchImageDataStart = () => ({\n  type: ActionTypes.FetchImageStart\n});\n\nexport type FetchImageDataStart = ReturnType<typeof fetchImageDataStart>;\n\nexport const fetchImageData = () => (dispatch) => {\n  dispatch(fetchImageDataStart());\n  \n}\n\nconst registerContext = (ctx: CanvasRenderingContext2D) => ({\n  type: ActionTypes.RegisterContext,\n  payload: {\n    context: ctx\n  }\n});\nexport type RegisterContext = ReturnType<typeof registerContext>;\n\nexport const registerCanvasContext = (ctx: CanvasRenderingContext2D) => dispatch => {\n  dispatch(registerContext(ctx));\n}\n\nconst updatePosition = (x: number, y: number) => ({\n  type: ActionTypes.UpdatePosition,\n  payload: {\n    x,\n    y\n  }\n})\nexport type UpdatePosition = ReturnType<typeof updatePosition>;\n\nexport const updateCursorPosition = (x: number, y: number) => (dispatch, getState) => {\n  const state = getState();\n  const zoom = getZoomFactor(state);\n  dispatch(updatePosition(Math.ceil(x / zoom), Math.ceil(y / zoom)));\n}\n\nconst clearPosition = () => ({\n  type: ActionTypes.ClearPosition\n})\nexport type ClearPosition = ReturnType<typeof clearPosition>;\n\nexport const clearCursorPosition = () => dispatch => {\n  dispatch(clearPosition());\n}\n\nconst setZoom = (f: number) => ({\n  type: ActionTypes.SetZoom,\n  payload: {\n    zoom: f\n  }\n});\nexport type SetZoom = ReturnType<typeof setZoom>;\n\nexport const setZoomFactor = (newFactor: number) => (dispatch, getState) => {\n  if (newFactor < 0) {\n    return;\n  }\n\n  const state = getState();\n  const ctx = getCanvasContext(state);\n  if (ctx) {\n    ctx.scale(newFactor, newFactor);\n  }\n  \n  dispatch(setZoom(newFactor));\n}\n\n\nexport const updatePixel = (newColor: Color, x: number, y: number) => (dispatch) => {\n\n}\n","export const FetchImageStart = 'canvas/FETCH_IMAGE_START';\nexport const FetchImageSuccess = 'canvas/FETCH_IMAGE_SUCCESS';\nexport const FetchImageError = 'canvas/FETCH_IMAGE_ERROR';\nexport const UpdatePixelStart = 'canvas/UPDATE_PIXEL_START';\nexport const UpdatePixelSuccess = 'canvas/UPDATE_PIXEL_SUCCESS';\nexport const UpdatePixelError = 'canvas/UPDATE_PIXEL_ERROR';\nexport const RegisterContext = 'canvas/REGISTER_CONTEXT';\nexport const UpdatePosition = 'canvas/UPDATE_POSITION';\nexport const ClearPosition = 'canvas/CLEAR_POSITION';\nexport const SetZoom = 'canvas/SET_ZOOM';\n","import React, { FC } from 'react';\nimport CanvasContainer from './CanvasContainer';\n\n\n\nconst CanvasPageContainer: FC = () => (\n  <CanvasContainer />\n);\n\nexport default CanvasPageContainer;\n","export const StartConnect = 'websocket/START_CONNECT';\nexport const ConnectSuccess = 'websocket/CONNECT_SUCCESS';\nexport const ConnectError = 'websocket/CONNECT_ERROR';\nexport const CloseConnection = 'websocket/CLOSE_CONNNECTION';\n","import { HOSTNAME } from '../constants';\nimport * as ActionTypes from './actionTypes';\nimport { getWebSocket } from './selectors';\n\nconst startConnect = () => ({\n  type: ActionTypes.StartConnect\n});\nexport type StartConnect =  ReturnType<typeof startConnect>;\n\nconst connectError = (error: string) => ({\n  type: ActionTypes.ConnectError,\n  payload: {\n    error\n  }\n});\nexport type ConnectError =  ReturnType<typeof connectError>;\n\nconst closeConnection = () => ({\n  type: ActionTypes.CloseConnection,\n});\nexport type CloseConnection =  ReturnType<typeof closeConnection>;\n\nconst connectSuccess = (socket: WebSocket) => ({\n  type: ActionTypes.ConnectSuccess,\n  payload: {\n    socket\n  }\n});\nexport type ConnectSuccess = ReturnType<typeof connectSuccess>;\n\nexport const openWebSocket = () => dispatch => {\n  dispatch(startConnect());\n\n  const socket = new WebSocket(`ws://${HOSTNAME}/ws`);\n    // open message is 0\n    socket.onopen = () => {\n      socket.send(\n        JSON.stringify({\n          type: 0,\n          message: \"Hi From the Client! The websocket just opened\"\n        })\n      );\n\n      socket.send(\n        JSON.stringify({\n          type: 1,\n          userId: \"AAAAAA\",\n          x: 6,\n          y: 9,\n          r: 4,\n          g: 2,\n          b: 0\n        })\n      );\n      \n    dispatch(connectSuccess(socket));\n  };\n\n  // close message is 9\n  socket.onclose = event => {\n    dispatch(closeConnection());\n  };\n\n  socket.onerror = error => {\n    dispatch(connectError(error.type));\n  };\n\n  socket.onmessage = event => {\n    const { data } = event;\n    // TODO (Ryan): figure out the best way to handle this... probably need to write some middlewear\n    console.log(\"Recieved a message from the server, message: \" + data);\n  };\n}\n\nconst makeUpdateMessage = (\n  id: string,\n  x: number,\n  y: number,\n  r: number,\n  g: number,\n  b: number\n) => {\n  return JSON.stringify({\n    type: 1,\n    userId: id,\n    x: x,\n    y: y,\n    r: r,\n    g: g,\n    b: b\n  });\n};\n\nexport const sendUpdateMessage = (id, x, y, r, g, b) => (dispatch, getState) => {\n  const socket = getWebSocket(getState());\n  if (socket) {\n    socket.send(makeUpdateMessage(id, x, y, r, g, b));\n  }\n}\n\nexport const closeWebSocket = () => (dispatch, getState) => {\n  const socket = getWebSocket(getState());\n  if (socket) {\n    socket.send(\n      JSON.stringify({\n        type: 9,\n        message: \"Client Closed!\"\n      })\n    );\n  }\n  dispatch(closeConnection());\n}\n\n// TODO (ryan): create action send different message types\n","import React, { FC } from \"react\";\nimport \"./About.scss\";\nimport { sendUpdateMessage } from \"../../websocket/actions\";\n\ninterface Props {\n  sendUpdateMessage: (id, x, y, r, g, b) => void;\n}\n\nconst About: FC<Props> = ({ sendUpdateMessage }) => (\n  <div className='about-page'>\n    <h1>OwlPlace</h1>\n    <p>\n      OwlPlace is a collaborative canvas editing application that allows users\n      to alter the contents of a shared canvas. Users will be able to change the\n      color of a single pixel within the canvas once per fixed time period\n      (likely once every couple minutes). When used by a large number of users,\n      groups of people may even collaborate and work together to create large\n      and intricate designs within the image for all to see. OwlPlace will\n      ensure that all users will see the same image at any given time, even\n      updating pixels live as other users change them.\n    </p>\n    <p>\n      Users will be able to access OwlPlace through a web application. When\n      visiting for the first time, users will be prompted to login with Google.\n      Once logged in, users will be able to view the canvas in its entirety,\n      zoom in on specific sections, see live updates to the canvas, and update\n      pixels. The goal of the front end of this application is to make the user\n      experience as simple as possible while still being engaging.\n    </p>\n    <p>\n      This application will be built on top of a distributed database. This\n      distributed database will be a custom solution implemented by our team\n      using the RAFT protocol to ensure consistency across servers. Each server\n      will run its own instance of the image control code and maintain its own\n      local database. RAFT will be used to maintain consistency of each server’s\n      local database and ensure that machines can recover the correct data if\n      they go offline and come back into the network. While the image and user\n      data systems will be somewhat separate from one another, they will use the\n      RAFT protocol API to ensure that local databases do not become out of sync\n      with one another.\n    </p>\n    <p>\n      For more information, visit the{\" \"}\n      <a href='https://docs.google.com/document/d/13_bi5Vf5WNiZuDCWOdyBopANCUBl-Cyt7jK-sCeUW2s/edit?usp=sharing'>\n        functional specification\n      </a>\n      .\n    </p>\n  </div>\n);\n\nexport default About;\n","import { connect } from 'react-redux';\nimport { sendUpdateMessage } from '../../websocket/actions';\nimport About from '../components/About';\n\ninterface DispatchProps {\n  sendUpdateMessage: (id, x, y, r, g, b) => void;\n}\n\nconst mapDispatchToProps: DispatchProps = {\n  sendUpdateMessage: sendUpdateMessage\n}\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(About);","import React, { FC } from \"react\";\nimport { PageHeader, Button, Menu, Dropdown, Icon, Tag } from \"antd\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport \"./Header.scss\";\n\ninterface Props {\n  isLoggedIn: boolean;\n  name?: string;\n  onLogin: () => void;\n  onLogout: () => void;\n}\n\nconst Header: FC<Props> = ({ onLogin, isLoggedIn, name, onLogout }) => {\n  //@ts-ignore\n  window.onGoogleScriptLoad = () => {\n    console.log(\"The google script has really loaded, cool!\");\n  };\n\n  const loginButton = isLoggedIn ? (\n    <div className='name-label'>Hi, {name}</div>\n  ) : (\n    <Button className='login-button' onClick={onLogin}>\n      Login\n    </Button>\n  );\n\n  let location = useLocation().pathname;\n\n  const menu = (\n    <Menu>\n      <Menu.Item>\n        {/*Check the last 5 characters in a string.*/}\n        {location.substring(location.length - 5, location.length) != \"about\" ? (\n          <Link to='/about'>About</Link>\n        ) : (\n          <Link to='/'>Home</Link>\n        )}\n      </Menu.Item>\n      {isLoggedIn && <Menu.Item onClick={onLogout}>Sign Out</Menu.Item>}\n    </Menu>\n  );\n\n  const dropdownMenu = (\n    <Dropdown key='more' overlay={menu}>\n      <Button\n        style={{\n          border: \"none\",\n          padding: 0\n        }}\n      >\n        <Icon\n          type='ellipsis'\n          style={{\n            fontSize: 20,\n            verticalAlign: \"top\"\n          }}\n        />\n      </Button>\n    </Dropdown>\n  );\n\n  return (\n    <PageHeader\n      title='OwlPlace'\n      subTitle='change the canvas one pixel at a time'\n      extra={[loginButton, dropdownMenu]}\n    />\n  );\n};\n\nexport default Header;\n","export const LoginStart = 'login/LOGIN_START';\nexport const LoginSuccess = 'login/LOGIN_SUCCESS';\nexport const LoginError = 'login/LOGIN_ERROR';\nexport const SignOut = 'login/SIGN_OUT';\n","import * as ActionTypes from './actionTypes';\n\nconst loginStart = () => ({\n  type: ActionTypes.LoginStart\n});\nexport type LoginStart = ReturnType<typeof loginStart>;\n\nconst loginSuccess = (name: string, id: string, email: string) => ({\n  type: ActionTypes.LoginSuccess,\n  payload: {\n    name,\n    id,\n    email,\n  }\n});\nexport type LoginSuccess = ReturnType<typeof loginSuccess>;\n\nconst loginError = () => ({\n  type: ActionTypes.LoginError\n});\nexport type LoginError = ReturnType<typeof loginError>;\n\nexport const login = () => async dispatch => {\n  dispatch(loginStart());\n\n  /**\n   * The Sign-In client object.\n   */\n  let auth2: any;\n\n  const googleAPILoaded: Promise<void> = new Promise(resolve => {\n    gapi.load('auth2', () => {\n      /**\n       * Retrieve the singleton for the GoogleAuth library and set up the\n       * client.\n       */\n      auth2 = gapi.auth2.init({\n          client_id: '634069824484-ch6gklc2fevg9852aohe6sv2ctq7icbk.apps.googleusercontent.com'\n      });\n      resolve();\n    });\n  });\n\n  await googleAPILoaded;\n\n  await gapi.auth2.getAuthInstance().signIn();\n  const googleUser = gapi.auth2.getAuthInstance().currentUser.get();\n  const profile = googleUser.getBasicProfile();\n\n  dispatch(loginSuccess(profile.getName(), profile.getId(), profile.getEmail()));\n}\n\nexport const checkLogin = () => async dispatch => {\n  dispatch(loginStart());\n\n  /**\n  * The Sign-In client object.\n  */\n let auth2: any;\n\n  return new Promise(resolve => {\n    const timeout = setTimeout(() => Promise.resolve(), 3000);\n    const loadApi = () => new Promise(resolve => {\n      while (!window.gapi) {} \n      resolve()\n    });\n\n    Promise.race([timeout, loadApi]);\n    if (!window.gapi) {\n      return;\n    }\n\n    gapi.load('auth2', () => {\n     /**\n      * Retrieve the singleton for the GoogleAuth library and set up the\n      * client.\n      */\n     gapi.auth2.init({\n         client_id: '634069824484-ch6gklc2fevg9852aohe6sv2ctq7icbk.apps.googleusercontent.com'\n     }).then( function() {\n         // Sign in the user if they are currently signed in.\n         auth2 = gapi.auth2.getAuthInstance(); \n         if (auth2.isSignedIn.get()) {\n           const googleUser = gapi.auth2.getAuthInstance().currentUser.get();\n           const profile = googleUser.getBasicProfile();\n           dispatch(loginSuccess(profile.getName(), profile.getName(), profile.getEmail())); \n         }\n       }\n     );\n\n      resolve();\n   });\n });\n}\n\nconst signOutAction = () => ({\n  type: ActionTypes.SignOut\n});\nexport type SignOut = ReturnType<typeof signOutAction>;\n\nexport const signOut = () => async dispatch => {\n  const auth2 = gapi.auth2.getAuthInstance();\n  await auth2.signOut();\n  dispatch(signOutAction());\n}\n","import { State } from '../types';\n\nexport const getIsLoggedIn = (state: State): boolean => state.login.isLoggedIn;\nexport const getUserName = (state: State): string | undefined => state.login.name || undefined;\nexport const getUserId = (state: State): string | undefined => state.login.userId || undefined;\nexport const getUserEmail = (state: State): string | undefined => state.login.email || undefined;\n","import { connect } from 'react-redux';\nimport Header from '../components/Header';\nimport { login, signOut } from '../../login/actions';\nimport { getIsLoggedIn, getUserName } from '../../login/selectors';\n\ninterface DispatchProps {\n  onLogin: () => void;\n  onLogout: () => void;\n}\n\ninterface StateProps {\n  isLoggedIn: boolean;\n  name?: string;\n}\n\nconst mapDispatchToProps: DispatchProps = {\n  onLogin: login,\n  onLogout: signOut,\n}\n\nconst mapStateToProps  = (state): StateProps => ({\n  isLoggedIn: getIsLoggedIn(state),\n  name: getUserName(state)\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Header);\n","import React from \"react\";\nimport \"./Footer.scss\";\n\nconst Footer: React.FC = () => {\n  return (\n    <div>\n      <footer>Made with &hearts; by COMP 413 @ Rice</footer>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React, { FC } from 'react';\n\nconst Error: FC = () => (\n  <div className='error-page'>\n    There was an error.\n  </div>\n);\n\nexport default Error;\n","import React, { FC } from 'react';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport ScrollToTop from './components/ScrollToTop';\nimport CanvasPageContainer from './canvas/containers/CanvasPageContainer';\nimport AboutPage from './about/containers/AboutContainer';\nimport Header from './header/containers/HeaderContainer';\nimport Footer from './footer/components/Footer';\nimport ErrorPage from './error/components/Error';\n\nconst RoutingContainer: FC = () => (\n  <Router basename='/OwlPlace'>\n    <ScrollToTop>\n      <Header />\n      <Route exact path='/' component={CanvasPageContainer} />\n      <Route path='/about' component={AboutPage} />\n      <Route path='/error' component={ErrorPage} />\n      <Footer />\n    </ScrollToTop>\n  </Router>\n);\n\nexport default RoutingContainer;\n","import React from \"react\";\nimport \"./App.scss\";\nimport RoutingContainer from './RoutingContainer';\nimport { connect } from 'react-redux';\nimport { checkLogin } from './login/actions';\nimport { openWebSocket } from './websocket/actions';\n\n// // updateMessage is type 1\n// const updateMessage = (\n//   id: string,\n//   x: number,\n//   y: number,\n//   r: number,\n//   g: number,\n//   b: number\n// ) => {\n//   return JSON.stringify({\n//     type: 1,\n//     userId: id,\n//     x: x,\n//     y: y,\n//     r: r,\n//     g: g,\n//     b: b\n//   });\n// };\n// const onClickP1 = (\n//   id: string,\n//   x: number,\n//   y: number,\n//   r: number,\n//   g: number,\n//   b: number\n// ) => {\n//   console.log(\"Sending update of Pixel 1\");\n//   socket.send(updateMessage(id, x, y, r, g, b));\n\n//   return true;\n// }\n\ninterface Props {\n  checkLogin: () => void;\n  openConnection: () => void;\n}\n\nclass App extends React.Component<Props> {\n\n  componentDidMount() {\n    this.props.checkLogin();\n    this.props.openConnection();\n  }\n  \n  render() {\n    return (\n      // <div>\n      //   <div className=\"top-nav-bar\">\n      //     <button className=\"login-btn\" onClick={onSignIn}>\n      //       <p className=\"login-text\">login</p>\n      //     </button>\n      //   </div>\n      //   <div className=\"main-wrapper\">\n      //     <h1>owlplaces</h1>\n      //     <h2>change the canvas one pixel at a time</h2>\n      //     <p>Click \"Pixel 1\" to send an update message to the server!\n      //       </p>\n      //       <button onClick = {() => onClickP1(\"user1\", 10, 400, 255, 255, 255)} id=\"p1\"> Pixel 1 </button>\n      //       {/* <button onClick= {onClickClose} id=\"close\">Close</button> */}\n      //   </div>\n      // </div>\n      <RoutingContainer />\n    );\n  }\n};\n\nconst mapDispatchToProps: Props = {\n  checkLogin: checkLogin,\n  openConnection: openWebSocket\n}\n\nexport default connect(\n  null,\n  mapDispatchToProps,\n)(App);\n","export const HOSTNAME = '127.0.0.1:3001';\n","// TODO (ryan): add stricter typing to handlers\nexport function createReducer<T>(\n  initialState: T,\n  handlers\n) {\n  return function(state: T = initialState, action): T {\n    const handler = handlers[action && action.type];\n    if (!handler) {\n      return state;\n    }\n    return handler(state, action);\n  };\n}\n","import { Color } from './types';\nimport * as ActionTypes from './actionTypes';\nimport { combineReducers,  } from 'redux';\nimport { createReducer } from '../createReducer';\nimport { RegisterContext, UpdatePosition, SetZoom } from './actions';\nimport * as WebSocketActionTypes from '../websocket/actionTypes';\nimport { DEFAULT_ZOOM } from './constants'\n\nexport interface State {\n  canvasContext: CanvasRenderingContext2D | null;\n  initialImage: string | null;\n  curPosition: { x: number, y: number} | null;\n  zoomFactor: number;\n}\n\nconst canvasContext = createReducer<State['canvasContext']>(null, {\n  [WebSocketActionTypes.ConnectError]: () => null,\n  [ActionTypes.RegisterContext]: (state, action: RegisterContext) => action.payload.context\n});\n\nconst curPosition = createReducer<State['curPosition']>(null, {\n  [ActionTypes.ClearPosition]: () => null,\n  [ActionTypes.UpdatePosition]: (state, action: UpdatePosition) => action.payload\n});\n\nconst zoomFactor = createReducer<State['zoomFactor']>(DEFAULT_ZOOM, {\n  [ActionTypes.SetZoom]: (state, action: SetZoom) => action.payload.zoom\n})\n\nexport default combineReducers({\n  canvasContext,\n  curPosition,\n  zoomFactor,\n});\n","import { createReducer } from '../createReducer';\nimport * as ActionTypes from './actionTypes';\nimport { combineReducers } from 'redux';\nimport { LoginSuccess } from './actions';\n\n\nexport interface State {\n  isLoggedIn: boolean;\n  name: string | null;\n  email: string | null;\n  userId: string | null;\n}\n\nconst isLoggedIn = createReducer<State['isLoggedIn']>(false, {\n  [ActionTypes.LoginStart]: () =>  false,\n  [ActionTypes.LoginError]: () =>  false,\n  [ActionTypes.SignOut]: () => false,\n  [ActionTypes.LoginSuccess]: () => true,\n});\n\nconst name = createReducer<State['name']>(null, {\n  [ActionTypes.LoginStart]: () =>  null,\n  [ActionTypes.LoginError]: () =>  null,\n  [ActionTypes.SignOut]: () => null,\n  [ActionTypes.LoginSuccess]: (state, action: LoginSuccess) => action.payload.name,\n});\n\nconst email = createReducer<State['name']>(null, {\n  [ActionTypes.LoginStart]: () =>  null,\n  [ActionTypes.LoginError]: () =>  null,\n  [ActionTypes.SignOut]: () => null,\n  [ActionTypes.LoginSuccess]: (state, action: LoginSuccess) => action.payload.email,\n});\n\nconst id = createReducer<State['userId']>(null, {\n  [ActionTypes.LoginStart]: () =>  null,\n  [ActionTypes.LoginError]: () =>  null,\n  [ActionTypes.SignOut]: () => null,\n  [ActionTypes.LoginSuccess]: (state, action: LoginSuccess) => action.payload.id,\n});\n\n\n\nexport default combineReducers({\n  isLoggedIn,\n  name,\n  email,\n  id,\n});\n","import { createReducer } from '../createReducer';\nimport * as ActionTypes from './actionTypes';\nimport { ConnectSuccess } from './actions';\nimport { combineReducers } from 'redux';\n \nexport interface State {\n  socket: WebSocket | null;\n  isConnected: boolean;\n  receivedError: boolean; \n}\n\nconst socket = createReducer<State['socket']>(null, {\n  [ActionTypes.StartConnect]: () => null,\n  [ActionTypes.ConnectError]: () => null,\n  [ActionTypes.CloseConnection]: () => null,\n  [ActionTypes.ConnectSuccess]: (state, action: ConnectSuccess) => action.payload.socket,\n});\n\nconst isConnected = createReducer<State['isConnected']>(false, {\n  [ActionTypes.StartConnect]: () => false,\n  [ActionTypes.ConnectError]: () => false,\n  [ActionTypes.CloseConnection]: () => false,\n  [ActionTypes.ConnectSuccess]: () => true,\n});\n\nconst receivedError = createReducer<State['receivedError']>(false, {\n  [ActionTypes.StartConnect]: () => false,\n  [ActionTypes.ConnectError]: () => true,\n  [ActionTypes.CloseConnection]: () => false,\n  [ActionTypes.ConnectSuccess]: () => false,\n}); \n\nexport default combineReducers({\n  socket,\n  isConnected,\n  receivedError\n})\n","import React from 'react';\nimport { render } from 'react-dom'\nimport './index.scss';\nimport App from './App';\nimport { combineReducers, createStore, applyMiddleware, compose } from 'redux';\nimport canvasReducers from './canvas/reducers';\nimport loginReducers from './login/reducers';\nimport webSocketReducers from './websocket/reducers';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\n\nconst rootReducer = combineReducers({\n  canvas: canvasReducers,\n  login: loginReducers,\n  websocket: webSocketReducers,\n});\n\n// @ts-ignore - redux devtools doesn't have type definitions\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}