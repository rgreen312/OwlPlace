{"version":3,"sources":["components/ScrollToTop.tsx","colorPicker/components/colorPicker.tsx","canvas/components/Canvas.tsx","canvas/constants.ts","websocket/selectors.ts","canvas/selectors.ts","canvas/containers/CanvasContainer.tsx","canvas/actions.ts","canvas/actionTypes.ts","canvas/containers/CanvasPageContainer.tsx","websocket/actionTypes.ts","websocket/actions.ts","about/components/About.tsx","about/containers/AboutContainer.tsx","header/components/Header.tsx","login/actionTypes.ts","login/actions.ts","login/selectors.ts","header/containers/HeaderContainer.tsx","footer/components/Footer.tsx","error/components/Error.tsx","RoutingContainer.tsx","App.tsx","constants.ts","createReducer.ts","canvas/reducers.ts","login/reducers.ts","websocket/reducers.ts","index.tsx"],"names":["withRouter","children","pathname","location","useEffect","window","scrollTo","ColorPicker","onComplete","onCancel","useState","r","g","b","color","setColor","onChange","c","rgb","className","onClick","Canvas","props","canvasRef","createRef","state","showColorPicker","bind","this","current","width","height","context","getContext","registerContext","imageSmoothingEnabled","fillStyle","fillRect","addEventListener","ev","getMousePos","x","y","updatePosition","onMouseOut","canvas","evt","rect","getBoundingClientRect","clientX","left","clientY","top","hideColorPicker","position","onUpdatePixel","setState","zoomFactor","receivedError","setZoomFactor","style","transform","ref","type","Component","getWebSocket","websocket","socket","undefined","getCurrentPosition","curPosition","getZoomFactor","mapDispatchToProps","ctx","dispatch","payload","getState","zoom","Math","ceil","newFactor","canvasContext","getCanvasContext","scale","newColor","connect","CanvasPageContainer","CanvasContainer","StartConnect","ConnectSuccess","ConnectError","CloseConnection","closeConnection","ActionTypes","About","sendUpdateMessage","id","send","JSON","stringify","userId","makeUpdateMessage","Header","onLogin","isLoggedIn","name","onLogout","onGoogleScriptLoad","console","log","loginButton","menu","Item","to","dropdownMenu","key","overlay","border","padding","fontSize","verticalAlign","title","subTitle","tags","extra","LoginStart","LoginSuccess","LoginError","SignOut","loginStart","loginSuccess","email","getIsLoggedIn","login","getUserName","a","googleAPILoaded","Promise","resolve","gapi","load","auth2","init","client_id","getAuthInstance","signIn","googleUser","currentUser","get","profile","getBasicProfile","getName","getId","getEmail","signOut","Footer","Error","RoutingContainer","basename","exact","path","component","AboutPage","ErrorPage","App","checkLogin","openConnection","React","timeout","setTimeout","race","then","isSignedIn","WebSocket","onopen","message","connectSuccess","onclose","event","onerror","error","connectError","onmessage","data","createReducer","initialState","handlers","action","handler","WebSocketActionTypes","combineReducers","isConnected","rootReducer","canvasReducers","loginReducers","webSocketReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","render","document","getElementById"],"mappings":"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","file":"static/js/main.bbaa6243.chunk.js","sourcesContent":["import { FC, useEffect } from 'react';\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\n\n// @ts-ignore - TODO: figure out why typescript doesn't like this\nconst ScrollToTop: FC<RouteComponentProps> = ({\n  children,\n  location: { pathname }\n}) => {\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return children || null;\n};\n\nexport default withRouter(ScrollToTop);\n","import React, { FC, useState } from \"react\";\r\nimport { SketchPicker } from \"react-color\";\r\nimport { Button } from \"antd\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport './colorPicker.scss';\r\n\r\ninterface RGBColor {\r\n  r: number;\r\n  g: number;\r\n  b: number;\r\n}\r\n\r\ninterface Props {\r\n  onComplete: (color: RGBColor) => void;\r\n  onCancel: () => void;\r\n}\r\n// http://casesandberg.github.io/react-color/\r\n\r\nconst ColorPicker: FC<Props> = ({ onComplete, onCancel }) => {\r\n  const [color, setColor] = useState({ r: 0, g: 0, b: 0 })\r\n  const complete = () => onComplete(color);\r\n\r\n  return ( \r\n    <div>\r\n      <SketchPicker \r\n        color={color}\r\n        onChange={(c) => setColor({ r: c.rgb.r, b: c.rgb.b, g: c.rgb.g })}\r\n      />\r\n      <div className='button-bar'>\r\n        <Button onClick={complete} className='okay-button'>\r\n          Okay\r\n        </Button>\r\n        <Button onClick={onCancel} className='cancel-button'>\r\n          Cancel\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default ColorPicker;\r\n","import React, { Component, createRef, RefObject, useState } from 'react';\nimport ColorPicker from '../../colorPicker/components/colorPicker';\nimport { Redirect } from 'react-router-dom';\nimport './Canvas.scss';\nimport { Icon } from 'antd';\nimport { ZOOM_CHANGE_FACTOR } from '../constants';\nimport { Color, RGBColor } from 'react-color';\n\ninterface Props {\n  receivedError: boolean;\n  registerContext: (context: CanvasRenderingContext2D) => void;\n  updatePosition: (x: number, y: number) => void;\n  position: {x: number, y: number}; \n  onMouseOut: () => void;\n  onUpdatePixel: (newColor: Color, x: number, y: number) => void;\n  zoomFactor: number;\n  setZoomFactor: (newZoom: number) => void;\n}\n\ninterface State {\n  showColorPicker: boolean; \n}\n\nclass Canvas extends Component<Props, State> {\n  canvasRef: RefObject<HTMLCanvasElement>;\n\n  constructor(props) {\n    super(props);\n    this.canvasRef = createRef();\n    this.state = {showColorPicker: false}\n    this.onCancel = this.onCancel.bind(this); \n    this.onComplete = this.onComplete.bind(this); \n  }\n\n  componentDidMount() {\n    this.canvasRef.current!.width = 1000;\n    this.canvasRef.current!.height = 1000;\n\n    const context = this.canvasRef.current!.getContext('2d');\n\n    // const image = new Image();\n\n    // image.onload = function() {\n    //   if (context) {\n    //     context.drawImage(image, 0, 0);\n    //   }\n    // };\n    // image.src = this.props.initialImage;\n\n\n    if (context) {\n      this.props.registerContext(context);\n    }\n\n    context!.imageSmoothingEnabled = false;\n\n    // TODO: remove this code\n    context!.fillStyle ='#000000';\n    context!.fillRect(0, 0, 1000, 500);\n    context!.fillStyle = '#ff0000';\n    context!.fillRect(0, 500, 1000, 500);\n\n    this.canvasRef.current!.addEventListener('mousemove', (ev) => {\n      if (this.state.showColorPicker) return;\n      const { x, y } = this.getMousePos(this.canvasRef.current, ev); \n      this.props.updatePosition(x, y);\n    })\n\n    this.canvasRef.current!.addEventListener('mouseout', () => {\n      if (this.state.showColorPicker) return;\n      this.props.onMouseOut();\n    })\n\n    this.canvasRef.current!.addEventListener('click', (ev) => {\n      const { x, y } = this.getMousePos(this.canvasRef.current, ev);\n      this.props.updatePosition(x, y);\n      this.showColorPicker(); \n    }, false);\n  }\n\n  getMousePos(canvas, evt) {\n    var rect = canvas.getBoundingClientRect();\n    return {\n      x: evt.clientX - rect.left,\n      y: evt.clientY - rect.top\n    };\n  }\n\n  onCancel() {\n    this.hideColorPicker(); \n  }\n\n  onComplete(c: RGBColor) {\n    this.hideColorPicker(); \n\n    const context = this.canvasRef.current!.getContext('2d');\n\n    const x = this.props.position.x; \n    const y = this.props.position.y;\n\n    context!.fillStyle = 'rgb(' + c.r + ',' + c.g + ',' + c.b + ')'\n    context!.fillRect(x, y, 1, 1);\n\n    this.props.onUpdatePixel({ r: c.r, g: c.g, b: c.b}, x, y);\n  }\n\n  showColorPicker() {\n    this.setState({\n      showColorPicker: true\n    });\n  }\n\n  hideColorPicker() {\n    this.setState({\n      showColorPicker: false\n    })\n  }\n\n  render() {\n    const { receivedError, zoomFactor, setZoomFactor } = this.props;\n    return (\n      // receivedError ? <Redirect to='/error'/> :\n      <div className='canvas-container'>\n        {this.state.showColorPicker && (<div className='color-picker'>\n          <ColorPicker\n            onCancel={this.onCancel}\n            onComplete={(c) => this.onComplete(c)}\n          />\n        </div>)}\n        <div className='zoom-canvas' style={{ transform: `scale(${zoomFactor}, ${zoomFactor})` }}>\n          <canvas ref={this.canvasRef} />\n        </div>\n        <div className='zoom-controls'>\n          <Icon\n            type='plus-circle'\n            onClick={() => setZoomFactor(zoomFactor + ZOOM_CHANGE_FACTOR)}\n            className='zoom-icon'\n          />\n          <Icon\n            type='minus-circle'\n            onClick={() => setZoomFactor(zoomFactor - ZOOM_CHANGE_FACTOR)}\n            className='zoom-icon'\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Canvas;\n","export const FETCH_IMAGE_ENDPOINT = '';\nexport const CANVAS_WIDTH = 1000;\nexport const CANVAS_HEIGHT = 1000;\nexport const DEFAULT_ZOOM = 41.0;\nexport const ZOOM_CHANGE_FACTOR = 10;\n","import { State } from '../types';\n\nexport const getWebSocket = (state: State): WebSocket | undefined => state.websocket.socket || undefined;\nexport const getIsConnected = (state: State): boolean => state.websocket.isConnected;\nexport const receivedError = (state: State): boolean => state.websocket.receivedError;\n","import { State } from '../types';\n\nexport const getCanvasContext = (state: State): CanvasRenderingContext2D | undefined => \n  state.canvas.canvasContext || undefined;\n\nexport const getCurrentPosition = (state: State): {x: number, y: number} | undefined => \n  state.canvas.curPosition || undefined;\n\nexport const getZoomFactor = (state: State): number => \n  state.canvas.zoomFactor;\n","import { connect } from 'react-redux';\nimport Canvas from '../components/Canvas';\nimport { receivedError } from '../../websocket/selectors';\nimport { registerCanvasContext, updateCursorPosition, clearCursorPosition, setZoomFactor, updatePixel } from '../actions';\nimport { getZoomFactor, getCurrentPosition } from '../selectors';\nimport { Color } from '../types';\n\ninterface DispatchProps {\n  registerContext: (context: CanvasRenderingContext2D) => void;\n  updatePosition: (x: number, y: number) => void;\n  onMouseOut: () => void;\n  setZoomFactor: (newZoom: number) => void;\n  onUpdatePixel: (newColor: Color, x: number, y: number) => void;\n}\n\ninterface StateProps {\n  receivedError: boolean;\n  zoomFactor: number;\n  position: {x: number, y: number} | undefined; \n}\n\nconst mapDispatchToProps: DispatchProps = {\n  registerContext: registerCanvasContext,\n  updatePosition: updateCursorPosition,\n  onMouseOut: clearCursorPosition,\n  setZoomFactor: setZoomFactor,\n  onUpdatePixel: updatePixel,\n};\n\nconst mapStateToProps  = (state): StateProps => ({\n  receivedError: receivedError(state),\n  zoomFactor: getZoomFactor(state),\n  position: getCurrentPosition(state), \n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Canvas);\n","// import { FETCH_IMAGE_ENDPOINT } from './constants';\n// import { HOSTNAME } from '../constants';\nimport { Color } from './types';\nimport * as ActionTypes from './actionTypes';\nimport { getZoomFactor, getCanvasContext } from './selectors'; \n\nconst fetchImageDataStart = () => ({\n  type: ActionTypes.FetchImageStart\n});\n\nexport type FetchImageDataStart = ReturnType<typeof fetchImageDataStart>;\n\nexport const fetchImageData = () => (dispatch) => {\n  dispatch(fetchImageDataStart());\n  \n}\n\nconst registerContext = (ctx: CanvasRenderingContext2D) => ({\n  type: ActionTypes.RegisterContext,\n  payload: {\n    context: ctx\n  }\n});\nexport type RegisterContext = ReturnType<typeof registerContext>;\n\nexport const registerCanvasContext = (ctx: CanvasRenderingContext2D) => dispatch => {\n  dispatch(registerContext(ctx));\n}\n\nconst updatePosition = (x: number, y: number) => ({\n  type: ActionTypes.UpdatePosition,\n  payload: {\n    x,\n    y\n  }\n})\nexport type UpdatePosition = ReturnType<typeof updatePosition>;\n\nexport const updateCursorPosition = (x: number, y: number) => (dispatch, getState) => {\n  const state = getState();\n  const zoom = getZoomFactor(state);\n  dispatch(updatePosition(Math.ceil(x / zoom), Math.ceil(y / zoom)));\n}\n\nconst clearPosition = () => ({\n  type: ActionTypes.ClearPosition\n})\nexport type ClearPosition = ReturnType<typeof clearPosition>;\n\nexport const clearCursorPosition = () => dispatch => {\n  dispatch(clearPosition());\n}\n\nconst setZoom = (f: number) => ({\n  type: ActionTypes.SetZoom,\n  payload: {\n    zoom: f\n  }\n});\nexport type SetZoom = ReturnType<typeof setZoom>;\n\nexport const setZoomFactor = (newFactor: number) => (dispatch, getState) => {\n  if (newFactor < 0) {\n    return;\n  }\n\n  const state = getState();\n  const ctx = getCanvasContext(state);\n  if (ctx) {\n    ctx.scale(newFactor, newFactor);\n  }\n  \n  dispatch(setZoom(newFactor));\n}\n\n\nexport const updatePixel = (newColor: Color, x: number, y: number) => (dispatch) => {\n\n}\n","export const FetchImageStart = 'canvas/FETCH_IMAGE_START';\nexport const FetchImageSuccess = 'canvas/FETCH_IMAGE_SUCCESS';\nexport const FetchImageError = 'canvas/FETCH_IMAGE_ERROR';\nexport const UpdatePixelStart = 'canvas/UPDATE_PIXEL_START';\nexport const UpdatePixelSuccess = 'canvas/UPDATE_PIXEL_SUCCESS';\nexport const UpdatePixelError = 'canvas/UPDATE_PIXEL_ERROR';\nexport const RegisterContext = 'canvas/REGISTER_CONTEXT';\nexport const UpdatePosition = 'canvas/UPDATE_POSITION';\nexport const ClearPosition = 'canvas/CLEAR_POSITION';\nexport const SetZoom = 'canvas/SET_ZOOM';\n","import React, { FC } from 'react';\nimport CanvasContainer from './CanvasContainer';\n\n\n\nconst CanvasPageContainer: FC = () => (\n  <CanvasContainer />\n);\n\nexport default CanvasPageContainer;\n","export const StartConnect = 'websocket/START_CONNECT';\nexport const ConnectSuccess = 'websocket/CONNECT_SUCCESS';\nexport const ConnectError = 'websocket/CONNECT_ERROR';\nexport const CloseConnection = 'websocket/CLOSE_CONNNECTION';\n","import { HOSTNAME } from '../constants';\nimport * as ActionTypes from './actionTypes';\nimport { getWebSocket } from './selectors';\n\nconst startConnect = () => ({\n  type: ActionTypes.StartConnect\n});\nexport type StartConnect =  ReturnType<typeof startConnect>;\n\nconst connectError = (error: string) => ({\n  type: ActionTypes.ConnectError,\n  payload: {\n    error\n  }\n});\nexport type ConnectError =  ReturnType<typeof connectError>;\n\nconst closeConnection = () => ({\n  type: ActionTypes.CloseConnection,\n});\nexport type CloseConnection =  ReturnType<typeof closeConnection>;\n\nconst connectSuccess = (socket: WebSocket) => ({\n  type: ActionTypes.ConnectSuccess,\n  payload: {\n    socket\n  }\n});\nexport type ConnectSuccess = ReturnType<typeof connectSuccess>;\n\nexport const openWebSocket = () => dispatch => {\n  dispatch(startConnect());\n\n  const socket = new WebSocket(`ws://${HOSTNAME}/ws`);\n    // open message is 0\n    socket.onopen = () => {\n      socket.send(\n        JSON.stringify({\n          type: 0,\n          message: \"Hi From the Client! The websocket just opened\"\n        })\n      );\n\n      socket.send(\n        JSON.stringify({\n          type: 1,\n          userId: \"AAAAAA\",\n          x: 6,\n          y: 9,\n          r: 4,\n          g: 2,\n          b: 0\n        })\n      );\n      \n    dispatch(connectSuccess(socket));\n  };\n\n  // close message is 9\n  socket.onclose = event => {\n    dispatch(closeConnection());\n  };\n\n  socket.onerror = error => {\n    dispatch(connectError(error.type));\n  };\n\n  socket.onmessage = event => {\n    const { data } = event;\n    // TODO (Ryan): figure out the best way to handle this... probably need to write some middlewear\n    console.log(\"Recieved a message from the server, message: \" + data);\n  };\n}\n\nconst makeUpdateMessage = (\n  id: string,\n  x: number,\n  y: number,\n  r: number,\n  g: number,\n  b: number\n) => {\n  return JSON.stringify({\n    type: 1,\n    userId: id,\n    x: x,\n    y: y,\n    r: r,\n    g: g,\n    b: b\n  });\n};\n\nexport const sendUpdateMessage = (id, x, y, r, g, b) => (dispatch, getState) => {\n  const socket = getWebSocket(getState());\n  if (socket) {\n    socket.send(makeUpdateMessage(id, x, y, r, g, b));\n  }\n}\n\nexport const closeWebSocket = () => (dispatch, getState) => {\n  const socket = getWebSocket(getState());\n  if (socket) {\n    socket.send(\n      JSON.stringify({\n        type: 9,\n        message: \"Client Closed!\"\n      })\n    );\n  }\n  dispatch(closeConnection());\n}\n\n// TODO (ryan): create action send different message types\n","import React, { FC } from 'react';\nimport { sendUpdateMessage } from '../../websocket/actions'\n\n\ninterface Props {\n  sendUpdateMessage: (id, x, y, r, g, b) => void;\n}\n\nconst About: FC<Props> = ({ sendUpdateMessage }) => (\n  <div className='about-page'>\n    Update the canvas one pixel at a time...\n\n    <h2>change the canvas one pixel at a time</h2>\n      <p>Click \"Pixel 1\" to send an update message to the server!\n      </p>\n        <button onClick = {() => sendUpdateMessage(\"user1\", 10, 400, 255, 255, 255)} id=\"p1\"> Pixel 1 </button>\n        {/* <button onClick= {onClickClose} id=\"close\">Close</button> */}\n  </div>\n);\n\nexport default About;\n","import { connect } from 'react-redux';\nimport { sendUpdateMessage } from '../../websocket/actions';\nimport About from '../components/About';\n\ninterface DispatchProps {\n  sendUpdateMessage: (id, x, y, r, g, b) => void;\n}\n\nconst mapDispatchToProps: DispatchProps = {\n  sendUpdateMessage: sendUpdateMessage\n}\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(About);","import React, { FC } from \"react\";\nimport { PageHeader, Button, Menu, Dropdown, Icon, Tag } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport './Header.scss';\n\ninterface Props {\n  isLoggedIn: boolean;\n  name?: string;\n  onLogin: () => void;\n  onLogout: () => void;\n}\n\n// TODO(Ryan): Should add a isLoggedIn prop, if they are then display user's name\nconst Header: FC<Props> = ({ onLogin, isLoggedIn, name, onLogout }) => {\n  //@ts-ignore\n  window.onGoogleScriptLoad = () => {\n    console.log(\"The google script has really loaded, cool!\");\n  };\n\n  const loginButton = isLoggedIn ? (\n    <>Hi, {name}</>\n  ) : (\n    <Button className=\"login-button\" onClick={onLogin}>\n      Login\n    </Button>\n  );\n\n  // TODO(ryan): add sign out functionality\n  const menu = (\n    <Menu>\n      <Menu.Item>\n        <Link to=\"/about\">About</Link>\n      </Menu.Item>\n      {isLoggedIn && <Menu.Item onClick={onLogout}>Sign Out</Menu.Item>}\n    </Menu>\n  );\n\n  const dropdownMenu = (\n    <Dropdown key=\"more\" overlay={menu}>\n      <Button\n        style={{\n          border: \"none\",\n          padding: 0\n        }}\n      >\n        <Icon\n          type=\"ellipsis\"\n          style={{\n            fontSize: 20,\n            verticalAlign: \"top\"\n          }}\n        />\n      </Button>\n    </Dropdown>\n  );\n\n  return (\n    <PageHeader\n      title=\"OwlPlace\"\n      subTitle=\"change the canvas one pixel at a time\"\n      tags={<Tag color=\"green\">COMP 413</Tag>}\n      extra={[loginButton, dropdownMenu]}\n    />\n  );\n};\n\nexport default Header;\n","export const LoginStart = 'login/LOGIN_START';\nexport const LoginSuccess = 'login/LOGIN_SUCCESS';\nexport const LoginError = 'login/LOGIN_ERROR';\nexport const SignOut = 'login/SIGN_OUT';\n","import * as ActionTypes from './actionTypes';\n\nconst loginStart = () => ({\n  type: ActionTypes.LoginStart\n});\nexport type LoginStart = ReturnType<typeof loginStart>;\n\nconst loginSuccess = (name: string, id: string, email: string) => ({\n  type: ActionTypes.LoginSuccess,\n  payload: {\n    name,\n    id,\n    email,\n  }\n});\nexport type LoginSuccess = ReturnType<typeof loginSuccess>;\n\nconst loginError = () => ({\n  type: ActionTypes.LoginError\n});\nexport type LoginError = ReturnType<typeof loginError>;\n\nexport const login = () => async dispatch => {\n  dispatch(loginStart());\n\n  /**\n   * The Sign-In client object.\n   */\n  let auth2: any;\n\n  const googleAPILoaded: Promise<void> = new Promise(resolve => {\n    gapi.load('auth2', () => {\n      /**\n       * Retrieve the singleton for the GoogleAuth library and set up the\n       * client.\n       */\n      auth2 = gapi.auth2.init({\n          client_id: '634069824484-ch6gklc2fevg9852aohe6sv2ctq7icbk.apps.googleusercontent.com'\n      });\n      resolve();\n    });\n  });\n\n  await googleAPILoaded;\n\n  await gapi.auth2.getAuthInstance().signIn();\n  const googleUser = gapi.auth2.getAuthInstance().currentUser.get();\n  const profile = googleUser.getBasicProfile();\n\n  dispatch(loginSuccess(profile.getName(), profile.getId(), profile.getEmail()));\n}\n\nexport const checkLogin = () => async dispatch => {\n  dispatch(loginStart());\n\n  /**\n  * The Sign-In client object.\n  */\n let auth2: any;\n\n  return new Promise(resolve => {\n    const timeout = setTimeout(() => Promise.resolve(), 3000);\n    const loadApi = () => new Promise(resolve => {\n      while (!window.gapi) {} \n      resolve()\n    });\n\n    Promise.race([timeout, loadApi]);\n    if (!window.gapi) {\n      return;\n    }\n\n    gapi.load('auth2', () => {\n     /**\n      * Retrieve the singleton for the GoogleAuth library and set up the\n      * client.\n      */\n     gapi.auth2.init({\n         client_id: '634069824484-ch6gklc2fevg9852aohe6sv2ctq7icbk.apps.googleusercontent.com'\n     }).then( function() {\n         // Sign in the user if they are currently signed in.\n         auth2 = gapi.auth2.getAuthInstance(); \n         if (auth2.isSignedIn.get()) {\n           const googleUser = gapi.auth2.getAuthInstance().currentUser.get();\n           const profile = googleUser.getBasicProfile();\n           dispatch(loginSuccess(profile.getName(), profile.getName(), profile.getEmail())); \n         }\n       }\n     );\n\n      resolve();\n   });\n });\n}\n\nconst signOutAction = () => ({\n  type: ActionTypes.SignOut\n});\nexport type SignOut = ReturnType<typeof signOutAction>;\n\nexport const signOut = () => async dispatch => {\n  const auth2 = gapi.auth2.getAuthInstance();\n  await auth2.signOut();\n  dispatch(signOutAction());\n}\n","import { State } from '../types';\n\nexport const getIsLoggedIn = (state: State): boolean => state.login.isLoggedIn;\nexport const getUserName = (state: State): string | undefined => state.login.name || undefined;\nexport const getUserId = (state: State): string | undefined => state.login.userId || undefined;\nexport const getUserEmail = (state: State): string | undefined => state.login.email || undefined;\n","import { connect } from 'react-redux';\nimport Header from '../components/Header';\nimport { login, signOut } from '../../login/actions';\nimport { getIsLoggedIn, getUserName } from '../../login/selectors';\n\ninterface DispatchProps {\n  onLogin: () => void;\n  onLogout: () => void;\n}\n\ninterface StateProps {\n  isLoggedIn: boolean;\n  name?: string;\n}\n\nconst mapDispatchToProps: DispatchProps = {\n  onLogin: login,\n  onLogout: signOut,\n}\n\nconst mapStateToProps  = (state): StateProps => ({\n  isLoggedIn: getIsLoggedIn(state),\n  name: getUserName(state)\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Header);\n","import React from \"react\";\nimport \"./Footer.scss\";\n\nconst Footer: React.FC = () => {\n  return (\n    <div>\n      <footer>Made with &hearts; by COMP 413 @ Rice</footer>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React, { FC } from 'react';\n\nconst Error: FC = () => (\n  <div className='error-page'>\n    There was an error.\n  </div>\n);\n\nexport default Error;\n","import React, { FC } from 'react';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport ScrollToTop from './components/ScrollToTop';\nimport CanvasPageContainer from './canvas/containers/CanvasPageContainer';\nimport AboutPage from './about/containers/AboutContainer';\nimport Header from './header/containers/HeaderContainer';\nimport Footer from './footer/components/Footer';\nimport ErrorPage from './error/components/Error';\n\nconst RoutingContainer: FC = () => (\n  <Router basename='/OwlPlace'>\n    <ScrollToTop>\n      <Header />\n      <Route exact path='/' component={CanvasPageContainer} />\n      <Route path='/about' component={AboutPage} />\n      <Route path='/error' component={ErrorPage} />\n      <Footer />\n    </ScrollToTop>\n  </Router>\n);\n\nexport default RoutingContainer;\n","import React from \"react\";\nimport \"./App.scss\";\nimport RoutingContainer from './RoutingContainer';\nimport { connect } from 'react-redux';\nimport { checkLogin } from './login/actions';\nimport { openWebSocket } from './websocket/actions';\n\n// // updateMessage is type 1\n// const updateMessage = (\n//   id: string,\n//   x: number,\n//   y: number,\n//   r: number,\n//   g: number,\n//   b: number\n// ) => {\n//   return JSON.stringify({\n//     type: 1,\n//     userId: id,\n//     x: x,\n//     y: y,\n//     r: r,\n//     g: g,\n//     b: b\n//   });\n// };\n// const onClickP1 = (\n//   id: string,\n//   x: number,\n//   y: number,\n//   r: number,\n//   g: number,\n//   b: number\n// ) => {\n//   console.log(\"Sending update of Pixel 1\");\n//   socket.send(updateMessage(id, x, y, r, g, b));\n\n//   return true;\n// }\n\ninterface Props {\n  checkLogin: () => void;\n  openConnection: () => void;\n}\n\nclass App extends React.Component<Props> {\n\n  componentDidMount() {\n    this.props.checkLogin();\n    this.props.openConnection();\n  }\n  \n  render() {\n    return (\n      // <div>\n      //   <div className=\"top-nav-bar\">\n      //     <button className=\"login-btn\" onClick={onSignIn}>\n      //       <p className=\"login-text\">login</p>\n      //     </button>\n      //   </div>\n      //   <div className=\"main-wrapper\">\n      //     <h1>owlplaces</h1>\n      //     <h2>change the canvas one pixel at a time</h2>\n      //     <p>Click \"Pixel 1\" to send an update message to the server!\n      //       </p>\n      //       <button onClick = {() => onClickP1(\"user1\", 10, 400, 255, 255, 255)} id=\"p1\"> Pixel 1 </button>\n      //       {/* <button onClick= {onClickClose} id=\"close\">Close</button> */}\n      //   </div>\n      // </div>\n      <RoutingContainer />\n    );\n  }\n};\n\nconst mapDispatchToProps: Props = {\n  checkLogin: checkLogin,\n  openConnection: openWebSocket\n}\n\nexport default connect(\n  null,\n  mapDispatchToProps,\n)(App);\n","export const HOSTNAME = '127.0.0.1:3001';\n","// TODO (ryan): add stricter typing to handlers\nexport function createReducer<T>(\n  initialState: T,\n  handlers\n) {\n  return function(state: T = initialState, action): T {\n    const handler = handlers[action && action.type];\n    if (!handler) {\n      return state;\n    }\n    return handler(state, action);\n  };\n}\n","import { Color } from './types';\nimport * as ActionTypes from './actionTypes';\nimport { combineReducers,  } from 'redux';\nimport { createReducer } from '../createReducer';\nimport { RegisterContext, UpdatePosition, SetZoom } from './actions';\nimport * as WebSocketActionTypes from '../websocket/actionTypes';\nimport { DEFAULT_ZOOM } from './constants'\n\nexport interface State {\n  canvasContext: CanvasRenderingContext2D | null;\n  initialImage: string | null;\n  curPosition: { x: number, y: number} | null;\n  zoomFactor: number;\n}\n\nconst canvasContext = createReducer<State['canvasContext']>(null, {\n  [WebSocketActionTypes.ConnectError]: () => null,\n  [ActionTypes.RegisterContext]: (state, action: RegisterContext) => action.payload.context\n});\n\nconst curPosition = createReducer<State['curPosition']>(null, {\n  [ActionTypes.ClearPosition]: () => null,\n  [ActionTypes.UpdatePosition]: (state, action: UpdatePosition) => action.payload\n});\n\nconst zoomFactor = createReducer<State['zoomFactor']>(DEFAULT_ZOOM, {\n  [ActionTypes.SetZoom]: (state, action: SetZoom) => action.payload.zoom\n})\n\nexport default combineReducers({\n  canvasContext,\n  curPosition,\n  zoomFactor,\n});\n","import { createReducer } from '../createReducer';\nimport * as ActionTypes from './actionTypes';\nimport { combineReducers } from 'redux';\nimport { LoginSuccess } from './actions';\n\n\nexport interface State {\n  isLoggedIn: boolean;\n  name: string | null;\n  email: string | null;\n  userId: string | null;\n}\n\nconst isLoggedIn = createReducer<State['isLoggedIn']>(false, {\n  [ActionTypes.LoginStart]: () =>  false,\n  [ActionTypes.LoginError]: () =>  false,\n  [ActionTypes.SignOut]: () => false,\n  [ActionTypes.LoginSuccess]: () => true,\n});\n\nconst name = createReducer<State['name']>(null, {\n  [ActionTypes.LoginStart]: () =>  null,\n  [ActionTypes.LoginError]: () =>  null,\n  [ActionTypes.SignOut]: () => null,\n  [ActionTypes.LoginSuccess]: (state, action: LoginSuccess) => action.payload.name,\n});\n\nconst email = createReducer<State['name']>(null, {\n  [ActionTypes.LoginStart]: () =>  null,\n  [ActionTypes.LoginError]: () =>  null,\n  [ActionTypes.SignOut]: () => null,\n  [ActionTypes.LoginSuccess]: (state, action: LoginSuccess) => action.payload.email,\n});\n\nconst id = createReducer<State['userId']>(null, {\n  [ActionTypes.LoginStart]: () =>  null,\n  [ActionTypes.LoginError]: () =>  null,\n  [ActionTypes.SignOut]: () => null,\n  [ActionTypes.LoginSuccess]: (state, action: LoginSuccess) => action.payload.id,\n});\n\n\n\nexport default combineReducers({\n  isLoggedIn,\n  name,\n  email,\n  id,\n});\n","import { createReducer } from '../createReducer';\nimport * as ActionTypes from './actionTypes';\nimport { ConnectSuccess } from './actions';\nimport { combineReducers } from 'redux';\n \nexport interface State {\n  socket: WebSocket | null;\n  isConnected: boolean;\n  receivedError: boolean; \n}\n\nconst socket = createReducer<State['socket']>(null, {\n  [ActionTypes.StartConnect]: () => null,\n  [ActionTypes.ConnectError]: () => null,\n  [ActionTypes.CloseConnection]: () => null,\n  [ActionTypes.ConnectSuccess]: (state, action: ConnectSuccess) => action.payload.socket,\n});\n\nconst isConnected = createReducer<State['isConnected']>(false, {\n  [ActionTypes.StartConnect]: () => false,\n  [ActionTypes.ConnectError]: () => false,\n  [ActionTypes.CloseConnection]: () => false,\n  [ActionTypes.ConnectSuccess]: () => true,\n});\n\nconst receivedError = createReducer<State['receivedError']>(false, {\n  [ActionTypes.StartConnect]: () => false,\n  [ActionTypes.ConnectError]: () => true,\n  [ActionTypes.CloseConnection]: () => false,\n  [ActionTypes.ConnectSuccess]: () => false,\n}); \n\nexport default combineReducers({\n  socket,\n  isConnected,\n  receivedError\n})\n","import React from 'react';\nimport { render } from 'react-dom'\nimport './index.scss';\nimport App from './App';\nimport { combineReducers, createStore, applyMiddleware, compose } from 'redux';\nimport canvasReducers from './canvas/reducers';\nimport loginReducers from './login/reducers';\nimport webSocketReducers from './websocket/reducers';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\n\nconst rootReducer = combineReducers({\n  canvas: canvasReducers,\n  login: loginReducers,\n  websocket: webSocketReducers,\n});\n\n// @ts-ignore - redux devtools doesn't have type definitions\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}